#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseQueryLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StateDatabase")]
	public partial class StateDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    #endregion
		
		public StateDataClassesDataContext() : 
				base(global::DatabaseQueryLibrary.Properties.Settings.Default.StateDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StateDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StateDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StateName;
		
		private int _Population;
		
		private string _FlagDescription;
		
		private string _StateFlower;
		
		private string _StateBird;
		
		private string _StateColors;
		
		private string _LargestCity;
		
		private string _SecondLargestCity;
		
		private string _ThirdLargestCity;
		
		private string _Capitol;
		
		private System.Nullable<decimal> _MedianIncome;
		
		private System.Nullable<decimal> _PercentJobsComputerRelated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnPopulationChanging(int value);
    partial void OnPopulationChanged();
    partial void OnFlagDescriptionChanging(string value);
    partial void OnFlagDescriptionChanged();
    partial void OnStateFlowerChanging(string value);
    partial void OnStateFlowerChanged();
    partial void OnStateBirdChanging(string value);
    partial void OnStateBirdChanged();
    partial void OnStateColorsChanging(string value);
    partial void OnStateColorsChanged();
    partial void OnLargestCityChanging(string value);
    partial void OnLargestCityChanged();
    partial void OnSecondLargestCityChanging(string value);
    partial void OnSecondLargestCityChanged();
    partial void OnThirdLargestCityChanging(string value);
    partial void OnThirdLargestCityChanged();
    partial void OnCapitolChanging(string value);
    partial void OnCapitolChanged();
    partial void OnMedianIncomeChanging(System.Nullable<decimal> value);
    partial void OnMedianIncomeChanged();
    partial void OnPercentJobsComputerRelatedChanging(System.Nullable<decimal> value);
    partial void OnPercentJobsComputerRelatedChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int NOT NULL")]
		public int Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagDescription", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FlagDescription
		{
			get
			{
				return this._FlagDescription;
			}
			set
			{
				if ((this._FlagDescription != value))
				{
					this.OnFlagDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FlagDescription = value;
					this.SendPropertyChanged("FlagDescription");
					this.OnFlagDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateFlower", DbType="VarChar(50)")]
		public string StateFlower
		{
			get
			{
				return this._StateFlower;
			}
			set
			{
				if ((this._StateFlower != value))
				{
					this.OnStateFlowerChanging(value);
					this.SendPropertyChanging();
					this._StateFlower = value;
					this.SendPropertyChanged("StateFlower");
					this.OnStateFlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateBird", DbType="VarChar(50)")]
		public string StateBird
		{
			get
			{
				return this._StateBird;
			}
			set
			{
				if ((this._StateBird != value))
				{
					this.OnStateBirdChanging(value);
					this.SendPropertyChanging();
					this._StateBird = value;
					this.SendPropertyChanged("StateBird");
					this.OnStateBirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateColors", DbType="VarChar(40)")]
		public string StateColors
		{
			get
			{
				return this._StateColors;
			}
			set
			{
				if ((this._StateColors != value))
				{
					this.OnStateColorsChanging(value);
					this.SendPropertyChanging();
					this._StateColors = value;
					this.SendPropertyChanged("StateColors");
					this.OnStateColorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargestCity", DbType="VarChar(40)")]
		public string LargestCity
		{
			get
			{
				return this._LargestCity;
			}
			set
			{
				if ((this._LargestCity != value))
				{
					this.OnLargestCityChanging(value);
					this.SendPropertyChanging();
					this._LargestCity = value;
					this.SendPropertyChanged("LargestCity");
					this.OnLargestCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondLargestCity", DbType="VarChar(40)")]
		public string SecondLargestCity
		{
			get
			{
				return this._SecondLargestCity;
			}
			set
			{
				if ((this._SecondLargestCity != value))
				{
					this.OnSecondLargestCityChanging(value);
					this.SendPropertyChanging();
					this._SecondLargestCity = value;
					this.SendPropertyChanged("SecondLargestCity");
					this.OnSecondLargestCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdLargestCity", DbType="VarChar(40)")]
		public string ThirdLargestCity
		{
			get
			{
				return this._ThirdLargestCity;
			}
			set
			{
				if ((this._ThirdLargestCity != value))
				{
					this.OnThirdLargestCityChanging(value);
					this.SendPropertyChanging();
					this._ThirdLargestCity = value;
					this.SendPropertyChanged("ThirdLargestCity");
					this.OnThirdLargestCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capitol", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Capitol
		{
			get
			{
				return this._Capitol;
			}
			set
			{
				if ((this._Capitol != value))
				{
					this.OnCapitolChanging(value);
					this.SendPropertyChanging();
					this._Capitol = value;
					this.SendPropertyChanged("Capitol");
					this.OnCapitolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedianIncome", DbType="Money")]
		public System.Nullable<decimal> MedianIncome
		{
			get
			{
				return this._MedianIncome;
			}
			set
			{
				if ((this._MedianIncome != value))
				{
					this.OnMedianIncomeChanging(value);
					this.SendPropertyChanging();
					this._MedianIncome = value;
					this.SendPropertyChanged("MedianIncome");
					this.OnMedianIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentJobsComputerRelated", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> PercentJobsComputerRelated
		{
			get
			{
				return this._PercentJobsComputerRelated;
			}
			set
			{
				if ((this._PercentJobsComputerRelated != value))
				{
					this.OnPercentJobsComputerRelatedChanging(value);
					this.SendPropertyChanging();
					this._PercentJobsComputerRelated = value;
					this.SendPropertyChanged("PercentJobsComputerRelated");
					this.OnPercentJobsComputerRelatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
